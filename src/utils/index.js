export * from './observer';
export { isPrimitive } from './isPrimitive';
export { buildOf } from './buildOf';
export * from './resolveState';
export { equals } from './equals';
export { cloneObject } from './cloneObject';
export const isFunction = (value) => typeof value === 'function';
export const noop = () => { };
export const random = (arr) => arr[Math.floor(Math.random() * arr.length)];
export const isNotSetter = (key) => !key.startsWith('set');
export const isMiddleware = (key, value) => isNotSetter(key) && isFunction(value);
